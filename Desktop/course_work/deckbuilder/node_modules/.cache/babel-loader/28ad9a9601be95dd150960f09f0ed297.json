{"ast":null,"code":"var _jsxFileName = \"/Users/robinfallon/Desktop/course_work/deckbuilder/src/index.js\";\n//import React from 'react';\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { DeckList, SearchBar, SearchResults } from './components';\nimport { fetchCards } from './api';\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  fetchCards().then(console.log);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"// or the SearchBar function, we can recover the setResults function\", /*#__PURE__*/React.createElement(SearchBar, {\n    setResults: setResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DeckList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/robinfallon/Desktop/course_work/deckbuilder/src/index.js"],"names":["ReactDOM","React","useState","axios","DeckList","SearchBar","SearchResults","fetchCards","App","results","setResults","then","console","log","render","document","getElementById"],"mappings":";AAAA;AACA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,QADF,EAEEC,SAFF,EAGEC,aAHF,QAIO,cAJP;AAMA,SACIC,UADJ,QAEO,OAFP;;AAMA,MAAMC,GAAG,GAAG,MAAM;AACd,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACAK,EAAAA,UAAU,GAAGI,IAAb,CAAkBC,OAAO,CAACC,GAA1B;AAEF,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAEE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAGH,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAGD,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAZD;;AAcAT,QAAQ,CAACc,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["//import React from 'react';\nimport ReactDOM from 'react-dom';\nimport React, { useState } from 'react';\n\nimport axios from 'axios';\n\nimport {\n  DeckList,\n  SearchBar,\n  SearchResults\n} from './components';\n\nimport {\n    fetchCards,\n} from './api';\n\n\n\nconst App = () => {\n    const [results, setResults] = useState([]);\n    fetchCards().then(console.log);\n\n  return (\n    <div id=\"app\">\n        // or the SearchBar function, we can recover the setResults function\n      <SearchBar setResults={ setResults } />\n      <SearchResults results={ results } />\n      <DeckList />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}