{"ast":null,"code":"var _jsxFileName = \"/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/SearchResults.js\";\nimport React from 'react';\nimport Card from './Card';\nimport './SearchResults.css';\n\nconst SearchResults = ({\n  results,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"results\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, \"Here's what we found (\", results.length, \" results):\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CardList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, results.map(result => /*#__PURE__*/React.createElement(Card, Object.assign({\n    key: result.id,\n    addCardToDeck: addCardToDeck,\n    removeCardFromDeck: removeCardFromDeck\n  }, result, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default SearchResults;\n/* \n\n{ ...result }. This is the spread operator, and it takes each \nkey/value pair from the result, and adds it as a prop/value pair to the Card component...\n\n* ...this way we quickly add a lot of props to the Card, and \ncan then read them off inside the Card component definition.\n\n*/","map":{"version":3,"sources":["/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/SearchResults.js"],"names":["React","Card","SearchResults","results","addCardToDeck","removeCardFromDeck","length","map","result","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;;AAEA,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,OADqB;AAErBC,EAAAA,aAFqB;AAGrBC,EAAAA;AAHqB,CAAD,KAIhB;AACJ,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAA4BF,OAAO,CAACG,MAApC,eADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,OAAO,CAACI,GAAR,CAAYC,MAAM,iBAChB,oBAAC,IAAD;AACE,IAAA,GAAG,EAAGA,MAAM,CAACC,EADf;AAEE,IAAA,aAAa,EAAGL,aAFlB;AAGE,IAAA,kBAAkB,EAAGC;AAHvB,KAIMG,MAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFJ,CAFF,CADF;AAgBD,CArBD;;AAuBA,eAAeN,aAAf;AAEA","sourcesContent":["import React from 'react';\n\nimport Card from './Card';\nimport './SearchResults.css';\n\nconst SearchResults = ({ \n  results,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div id=\"results\">\n      <h3>Here's what we found ({ results.length } results):</h3>\n      <div className=\"CardList\">\n        {\n          results.map(result => (\n            <Card \n              key={ result.id } \n              addCardToDeck={ addCardToDeck }\n              removeCardFromDeck={ removeCardFromDeck }\n              {...result} />\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default SearchResults;\n\n/* \n\n{ ...result }. This is the spread operator, and it takes each \nkey/value pair from the result, and adds it as a prop/value pair to the Card component...\n\n* ...this way we quickly add a lot of props to the Card, and \ncan then read them off inside the Card component definition.\n\n*/"]},"metadata":{},"sourceType":"module"}