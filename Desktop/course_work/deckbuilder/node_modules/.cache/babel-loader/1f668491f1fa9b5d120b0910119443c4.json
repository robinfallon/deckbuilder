{"ast":null,"code":"var _jsxFileName = \"/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/DeckList.js\";\nimport React from 'react';\n\nconst DeckList = ({\n  deck,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Your deck so far (\", cardCount, \" cards):\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeckList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, deck.map(({\n    id,\n    name,\n    count\n  }) => /*#__PURE__*/React.createElement(\"p\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"(\", count, \"x) \", name), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addCardToDeck({\n      id,\n      name\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \" + \"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => removeCardFromDeck({\n      id\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \" - \")))));\n};\n\nexport default DeckList;\n/* \n -We are simply mapping over the cards and displaying the correct data.\n\n -We use the card id as a unique key for our paragraph elements.\n\n -We are using reduce as a way to get the total number of cards (saving it in a variable cardCount) \n in a deck given an array of cards.\n\n -'count' is a property of a single card object in the deck array. It represents the count of that specific card.\n\n -'cardCount' is the total number of cards in our deck (regardless of card type).\n*/","map":{"version":3,"sources":["/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/DeckList.js"],"names":["React","DeckList","deck","addCardToDeck","removeCardFromDeck","cardCount","reduce","card","count","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,IADgB;AAEhBC,EAAAA,aAFgB;AAGhBC,EAAAA;AAHgB,CAAD,KAIV;AACL,MAAIC,SAAS,GAAGH,IAAI,CAACI,MAAL,CAAY,CAACD,SAAD,EAAYE,IAAZ,KAAqB;AAC/C,WAAOF,SAAS,GAAGE,IAAI,CAACC,KAAxB;AACD,GAFe,EAEb,CAFa,CAAhB;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwBH,SAAxB,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCH,IAAI,CAACO,GAAL,CAAS,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYH,IAAAA;AAAZ,GAAD,kBACR;AAAG,IAAA,GAAG,EAAGE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKF,KADL,SACiBG,IADjB,CADF,eAGS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHT,eAIE;AAAQ,IAAA,OAAO,EACb,MAAMR,aAAa,CAAC;AAAEO,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,CADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,eAOE;AAAQ,IAAA,OAAO,EACb,MAAMP,kBAAkB,CAAC;AAAEM,MAAAA;AAAF,KAAD,CAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,CADD,CADD,CAFF,CADF;AAoBD,CA7BD;;AA+BA,eAAeT,QAAf;AAEA","sourcesContent":["import React from 'react';\n\nconst DeckList = ({ \n  deck,\n  addCardToDeck,\n  removeCardFromDeck\n }) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count\n  }, 0);\n\n  return (\n    <div id=\"deck\">\n      <h3>Your deck so far ({ cardCount } cards):</h3>\n      <div className=\"DeckList\">\n      {deck.map(({ id, name, count }) => (\n        <p key={ id }>\n          <span>\n            ({ count }x) { name }\n          </span><br /> \n          <button onClick={\n            () => addCardToDeck({ id, name })\n          }> + </button>\n          <button onClick={\n            () => removeCardFromDeck({ id })\n          }> - </button>\n        </p>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;\n\n/* \n -We are simply mapping over the cards and displaying the correct data.\n\n -We use the card id as a unique key for our paragraph elements.\n\n -We are using reduce as a way to get the total number of cards (saving it in a variable cardCount) \n in a deck given an array of cards.\n\n -'count' is a property of a single card object in the deck array. It represents the count of that specific card.\n\n -'cardCount' is the total number of cards in our deck (regardless of card type).\n*/"]},"metadata":{},"sourceType":"module"}