{"ast":null,"code":"var _jsxFileName = \"/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/DeckList.js\";\nimport React from 'react';\n\nconst DeckList = ({\n  deck\n}) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count;\n  }, 0);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"deck\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Your deck so far (\", cardCount, \" cards):\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"DeckList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, deck.map(card => /*#__PURE__*/React.createElement(\"p\", {\n    key: card.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"(\", card.count, \"x) \", card.name))));\n};\n\nexport default DeckList;\n/* \n -We are simply mapping over the cards and displaying the correct data.\n\n -We use the card id as a unique key for our paragraph elements.\n\n -We are using reduce as a way to get the total number of cards (saving it in a variable cardCount) \n in a deck given an array of cards.\n\n -'count is a property of a single card object in the deck array. It represents the count of that specific card.\n\n -'cardCount' is the total number of cards in our deck (regardless of card type).\n*/","map":{"version":3,"sources":["/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/DeckList.js"],"names":["React","DeckList","deck","cardCount","reduce","card","count","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,MAAIC,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAY,CAACD,SAAD,EAAYE,IAAZ,KAAqB;AAC/C,WAAOF,SAAS,GAAGE,IAAI,CAACC,KAAxB;AACD,GAFe,EAEb,CAFa,CAAhB;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwBH,SAAxB,aADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,IAAI,CAACK,GAAL,CAASF,IAAI,iBACZ;AAAG,IAAA,GAAG,EAAGA,IAAI,CAACG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACKH,IAAI,CAACC,KADV,SACsBD,IAAI,CAACI,IAD3B,CADD,CADD,CAFF,CADF;AAYD,CAjBD;;AAmBA,eAAeR,QAAf;AAEA","sourcesContent":["import React from 'react';\n\nconst DeckList = ({ deck }) => {\n  let cardCount = deck.reduce((cardCount, card) => {\n    return cardCount + card.count\n  }, 0);\n\n  return (\n    <div id=\"deck\">\n      <h3>Your deck so far ({ cardCount } cards):</h3>\n      <div className=\"DeckList\">\n      {deck.map(card => (\n        <p key={ card.id }>\n          ({ card.count }x) { card.name }\n        </p>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;\n\n/* \n -We are simply mapping over the cards and displaying the correct data.\n\n -We use the card id as a unique key for our paragraph elements.\n\n -We are using reduce as a way to get the total number of cards (saving it in a variable cardCount) \n in a deck given an array of cards.\n\n -'count is a property of a single card object in the deck array. It represents the count of that specific card.\n\n -'cardCount' is the total number of cards in our deck (regardless of card type).\n*/"]},"metadata":{},"sourceType":"module"}