{"ast":null,"code":"var _jsxFileName = \"/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/SearchBar.js\";\nimport React, { useState } from 'react';\nimport { fetchCards } from '../api';\n\nconst SearchBar = ({\n  setResults\n}) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleTextChange = event => {\n    setText(event.target.value);\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const cards = await fetchCards({\n      name,\n      text\n    });\n    setResults(cards);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Look up cards here...\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"card name\",\n    value: name,\n    onChange: handleNameChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"card text\",\n    value: text,\n    onChange: handleTextChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n};\n\nexport default SearchBar;\n/* \nHere, we create a handleSubmit function\n1. Prevent the form from submitting, as always...\n2. Then we await the return of our fetchCards method, and pass the results into setResults. \n\nThat will update the value of results back up at App, and since that's a prop of SearchResults, \nthe SearchResults component will re-render.\n\nOur state lives up in App, and flows back and forth between the SearchBar and \nSearchResults. This is a common pattern.\n*/","map":{"version":3,"sources":["/Users/robinfallon/Desktop/course_work/deckbuilder/src/components/SearchBar.js"],"names":["React","useState","fetchCards","SearchBar","setResults","name","setName","text","setText","handleNameChange","event","target","value","handleTextChange","handleSubmit","preventDefault","cards"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SACEC,UADF,QAEO,QAFP;;AAIA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMQ,gBAAgB,GAAGC,KAAK,IAAI;AAChCJ,IAAAA,OAAO,CAAEI,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAP;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGH,KAAK,IAAI;AAChCF,IAAAA,OAAO,CAAEE,KAAK,CAACC,MAAN,CAAaC,KAAf,CAAP;AACD,GAFD;;AAIA,iBAAeE,YAAf,CAA4BJ,KAA5B,EAAmC;AACjCA,IAAAA,KAAK,CAACK,cAAN;AAEA,UAAMC,KAAK,GAAG,MAAMd,UAAU,CAAC;AAC7BG,MAAAA,IAD6B;AAE7BE,MAAAA;AAF6B,KAAD,CAA9B;AAKAH,IAAAA,UAAU,CAACY,KAAD,CAAV;AACD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE;AAAM,IAAA,QAAQ,EAAGF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAGT,IAHV;AAIE,IAAA,QAAQ,EAAGI,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,WAFd;AAGE,IAAA,KAAK,EAAGF,IAHV;AAIE,IAAA,QAAQ,EAAGM,gBAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAWE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CAFF,CADF;AAkBD,CAzCD;;AA2CA,eAAeV,SAAf;AAEA","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  fetchCards,\n} from '../api';\n\nconst SearchBar = ({ setResults }) => {\n  const [name, setName] = useState('');\n  const [text, setText] = useState('');\n\n  const handleNameChange = event => {\n    setName( event.target.value );\n  }\n\n  const handleTextChange = event => {\n    setText( event.target.value );\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    const cards = await fetchCards({\n      name,\n      text\n    });\n\n    setResults(cards);\n  }\n\n  return (\n    <div id=\"search\">\n      <h3>Look up cards here...</h3>\n      <form onSubmit={ handleSubmit }>\n        <input\n          type=\"text\" \n          placeholder=\"card name\"\n          value={ name }\n          onChange={ handleNameChange } />\n        <input\n          type=\"text\"\n          placeholder=\"card text\"\n          value={ text }\n          onChange={ handleTextChange } />\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n\n/* \nHere, we create a handleSubmit function\n1. Prevent the form from submitting, as always...\n2. Then we await the return of our fetchCards method, and pass the results into setResults. \n\nThat will update the value of results back up at App, and since that's a prop of SearchResults, \nthe SearchResults component will re-render.\n\nOur state lives up in App, and flows back and forth between the SearchBar and \nSearchResults. This is a common pattern.\n*/"]},"metadata":{},"sourceType":"module"}